# -- general -------------------------------------------------------------------
set -g automatic-rename on        # rename window to reflect current program
set -g base-index 1               # start windows numbering at 1
set -g display-panes-time 800     # slightly longer pane indicators display time
set -g display-time 1000          # slightly longer status messages display time
set -g history-limit 5000         # boost history
set -g mode-keys vi
set -g monitor-activity on
set -g mouse on                   # Enable mouse
set -g pane-base-index 1          # make pane numbering consistent with windows
set -g renumber-windows on        # renumber windows when a window is closed
set -g status-interval 10         # redraw status line every 10 seconds
set -g visual-activity off
set -g xterm-keys on
set -s escape-time 0              # faster command sequences
set -s focus-events on
set -sg repeat-time 100           # increase repeat timeout

# -- True color support --------------------------------------------------------
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

# -- Mappings ------------------------------------------------------------------
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
bind -n C-t new-window
bind -n C-w confirm kill-pane
bind - split-window -v            # split current window horizontally
bind v split-window -h            # split current window vertically

# Pane navigation (github.com/christoomey/vim-tmux-navigator)
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# Navigating through windows with Alt + h/l
bind-key -n M-h previous-window
bind-key -n M-l next-window

# Pane resizing
bind -n C-Left resize-pane -L 2
bind -n C-Down resize-pane -D 2
bind -n C-Up resize-pane -U 2
bind -n C-Right resize-pane -R 2
bind > swap-pane -D             # swap current pane with the next one
bind < swap-pane -U             # swap current pane with the previous one

# Copy
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Reload configuration
bind r source-file ~/.config/tmux/tmux.conf \; display '~/.config/tmux/tmux.conf sourced'

# -- Color palette  ------------------------------------------------------------
light01="#3c3836"
light02="#504945"
light03="#665c54"
light0A="#8ec07c"
light0B="#d3869b"

dark01="#333333"
dark02="#555555"
dark03="#777777"
dark04="#999999"

# -- Appearance  ---------------------------------------------------------------
# source "/usr/share/powerline/bindings/tmux/powerline.conf"
set -g status-position top
set -g pane-border-status top
set -g status-justify centre                        # Center window names
set -g pane-border-format '─'
set -g window-status-current-format " #[bold]#W"    # Active window (format)
set -g window-status-format "  #I:#W "              # Inactive windows (format)
set -g message-style fg=$light01                    # message text

# Colored status bar
# set -g pane-active-border-style fg=$light0A          # Active pane border color
# set -g pane-border-style fg=$light03                 # Inactive pane border color
# set -g window-status-current-style fg=$light0A  # Active windows (style)
# set -g window-status-style fg=$light03          # Inactive windows (style)
# set -g status-left "#[fg=$light0B] #S → "
# set -g status-right "#[fg=$light0B] %d/%m   %R "

# Dark status bar
set -g pane-active-border-style fg=$dark03
set -g pane-border-style fg=$dark01
set -g window-status-current-style fg=$dark04  # Active windows (style)
set -g window-status-style fg=$dark02          # Inactive windows (style)
set -g status-left "#[fg=$dark03] #S → "
set -g status-right "#[fg=$dark03] %d/%m   %R "
